name: Deploy Function App to Azure
on:
  push:
    branches:
      - main
    paths:
      - 'api/**'
  workflow_dispatch:

env:
 TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r api/requirements.txt --target=".python_packages/lib/site-packages"

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TFC_AUTH_TOKEN}}
          terraform_wrapper: false

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        working-directory: ./app_terraform
        run: terraform init

      - name: Terraform Output
        id: terraform_output
        working-directory: ./app_terraform
        run: |
          function_name=$(terraform output -raw function_app_name)
          echo $function_name
          echo "function_name=$function_name" >> "$GITHUB_OUTPUT"

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Get Publish Profile
        id: get-publish-profile
        run: |
          publish_profile=$(az webapp deployment list-publishing-profiles -g 'resource-group-name' -n 'app-service-name' --xml)
          echo "publish_profile=$publish_profile" >> "$GITHUB_OUTPUT"

      - name: Deploy to Azure Functions
        uses: azure/functions-action@v1
        with:
          app-name: ${{ steps.terraform_output.outputs.function_name }}
          package: './api'
          scm-do-build-during-deployment: true
          enable-oryx-build: true
          publish-profile: ${{ steps.get-publish-profile.outputs.publish_profile }}
          #publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}